@page "/trendy"
@rendermode InteractiveWebAssembly
@using BlazorApp1.Models;
@inject HttpClient Http

<PageTitle>Trending CryptoCoins</PageTitle>

<h1>Trendy</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> 



@if (coins == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Symbol</th>
                <th>Name</th>
                <th>Change in % (24h)</th>
                <th>Price (SEK)</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var coin in coins.Where(x => x.Price > 0.0005))
            {
                number++;
                <tr>
                    <td>@number</td>
                    <td>@coin.Summary</td>
                    <td>@coin.CryptoName</td>
                    <td>@coin.PercentChange %</td>
                    <td>@coin.Price</td>
                    
                </tr>
            }
        </tbody>
    </table>

}

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}
@code {
    int number = 0;
    int myNumber = 25; 
    List<CryptoCoin> coins = new List<CryptoCoin>();

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering

        string baseUrl = "https://localhost:7229/";

        coins = await Http.GetFromJsonAsync<List<CryptoCoin>>($"{baseUrl}api/crypto/trending");
        
    }   
}